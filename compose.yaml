networks:
  network:
    driver: bridge
volumes:
  postgres:
    driver: local
services:
  postgres:
    container_name: postgres
    image: postgres:17.2
    restart: unless-stopped
    ports:
      - '5432:5432'
    networks:
      - network
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=audiobook
      - POSTGRES_USER=audiobook
      - POSTGRES_PASSWORD=audiobook
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "audiobook", "-d", "audiobook"]
      interval: 15s
      timeout: 10s
      retries: 10
  server:
    container_name: server
    build:
      context: ./repos/server
      dockerfile: Dockerfile.dev
    ports:
      - '3000:3000'
    networks:
      - network
    environment:
      - DATABASE_CLIENT=pg
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=audiobook
      - DATABASE_USER=audiobook
      - DATABASE_PASSWORD=audiobook
      - SERVER_URL=http://localhost:3000
      - AUDIOBOOK_URL=http://localhost:5000
    volumes:
      - ./repos/server:/app
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://localhost:3000/health || exit 1
      interval: 15s
      timeout: 10s
      retries: 10
  client:
    container_name: client
    build:
      context: ./repos/client
      dockerfile: Dockerfile.dev
    ports:
      - '5000:5000'
    networks:
      - network
    environment:
      - NEXT_PUBLIC_SERVER_URL=http://localhost:3000
    volumes: 
      - ./repos/client:/app
    depends_on:
      server:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://localhost:5000 || exit 1
      interval: 15s
      timeout: 10s
      retries: 10